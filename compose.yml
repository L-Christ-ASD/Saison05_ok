services:
  front:
    image: node:22-alpine
    ports:
      - 5173:5173
    working_dir: /app
    volumes:
      - ./front:/app
    command: sh -c "npm install && npm run dev"
    networks:
      - db_front

  back:
    image: directus/directus
    ports:
      - 8055:8055
    env_file:
      - .env
        
    depends_on:
      - db
    networks:
      - db_front
      - bd_network
    
    
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB_DATABASE} #extrapolation
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data/dump.sql:/docker-entrypoint-initdb.d/init.sql # Ã  l'initialisation, je declenche le init.sql
      - db-data:/var/lib/postgresql/data
    
    networks:
      - bd_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s   # ou 1m30s
      timeout: 5s
      retries: 5
      start_period: 5s
    

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      db:
        condition: service_healthy
    networks:
      - bd_network
  
volumes:
  db-data:

networks:
  bd_network:
  db_front: